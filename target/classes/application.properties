spring.profiles.active=test
spring.jpa.open-in-view=true
application.security.jwt.secret-key=46d004320ce2bb12ac4e882aee5fddceee906788a646ee3311c0dde1c097a332
application.security.jwt.expiration=60000000
application.security.jwt.refresh-token.expiration=600000
logging.level.org.hibernate.SQL=DEBUG

# Banco MySQL no localhost:8080
# spring.datasource.url=jdbc:mysql://proto-on.mysql.database.azure.com/proto_on?useSSL=true&requireSSL=true
# spring.datasource.username=Audrey
# spring.datasource.password=Banco01!
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true

# spring.datasource.url=jdbc:mysql://proto-on.mysql.database.azure.com/proto_on
# spring.datasource.username=Audrey
# spring.datasource.password=Banco01!
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.properties.hibernate.hbm2ddl.auto=update
# spring.servlet.multipart.enabled=true
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# spring.datasource.url=jdbc:mysql://viaduct.proxy.rlwy.net:57494/railway
# spring.datasource.username=root
# spring.datasource.password=hqjqyOZAhnoFfdoERuXKGKVSeRSIXrxr
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
# logging.level.org.hibernate.SQL=ERROR
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR


# Configuração do SMTP para recuperar email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=siteprotoon@gmail.com
spring.mail.password=mxbiyjsepcrqzpbg
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Diretório onde os arquivos serão salvos (crie esta pasta no seu projeto)
file.upload-dir=./uploads

# Tamanho máximo do arquivo (10MB)
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# # Configuração do SMTP para recuperar email
# spring.mail.host=sandbox.smtp.mailtrap.io
# spring.mail.port=587
# spring.mail.username=
# spring.mail.password=
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true

# Banco MySQL no localhost:8080
# spring.datasource.url=jdbc:mysql://localhost:3306/protoon
# spring.datasource.username=root
# spring.datasource.password= 
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true

# Configurações da API Hugging Face
huggingface.api.url=https://api-inference.huggingface.co/models/pierreguillou/bert-base-cased-squad-v1.1-portuguese
huggingface.api.key=

# GoogleAPI
# application.properties
google.gemini.api.key=AIzaSyBCq3T8KOXZvx4Ag0jJp5JtqjCokfX90B4
# google.gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent

# funciona????????
google.gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent